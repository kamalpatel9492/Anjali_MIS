@model AnjaliMIS.Models.INV_Item

@{
	ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(model => model.Created)
	@Html.HiddenFor(model => model.ItemID)

	<!--Add-Edit code start-->
	<div class="col-md-12">
		<!-- BEGIN VALIDATION STATES-->
		<div class="portlet box blue">
			<div class="portlet-title">
				<div class="caption">
					<i class="fa fa-gift"></i>Item Edit
				</div>
			</div>
			<div class="portlet-body form">
				<!-- BEGIN FORM-->
				<div class="form-horizontal">
					<div class="form-body">
						@*<h3 class="form-section">Basic validation States</h3>*@
						<div class="form-group">
							@Html.LabelFor(model => model.CompanyID, "CompanyID", htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.DropDownList("CompanyID", null, htmlAttributes: new { @class = "form-control" })
								@Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.UnitID, "UnitID", htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.DropDownList("UnitID", null, htmlAttributes: new { @class = "form-control" })
								@Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
								@Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.IsConfigurable, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								<div class="checkbox">
									@Html.EditorFor(model => model.IsConfigurable)
									@Html.ValidationMessageFor(model => model.IsConfigurable, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.MinStockLimit, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.MinStockLimit, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.MinStockLimit, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Modified, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.Modified, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Modified, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(model => model.RejectedQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.RejectedQuantity, new { htmlAttributes = new { @class = "form-control" } })
								@Html.ValidationMessageFor(model => model.RejectedQuantity, "", new { @class = "text-danger" })
							</div>
						</div>
					</div>
					<div class="form-actions">
						<div class="row">
							<div class="col-md-offset-3 col-md-9">
								<input type="submit" value="Save" class="btn green" />
								@Html.ActionLink("Back to List", "index", "INV_Item", new { @class = "btn default" })
							</div>
						</div>
					</div>
				</div>
				<!-- END FORM-->
			</div>
		</div>
		<!-- END VALIDATION STATES-->
	</div>
	<!--Add-Edit code end-->

}

