@model AnjaliMIS.ViewModals.INV_PurchaseOrderViewModal

@{
    ViewBag.Title = "Edit";
}
@section breadcrumb {
    <li>
        @Html.ActionLink("Inventory Dashboard", "Dashboard",
                                new { controller = "INV_Item" })
    </li>
}
<script src="~/Scripts/jquery-3.3.1.min.js"></script>


@using (Html.BeginForm("POReturn", "INV_PurchaseOrder", FormMethod.Post, new {id="POReturn" }))
{
    @*@Html.AntiForgeryToken()*@
    @Html.HiddenFor(model => model.Created)
    @Html.HiddenFor(model => model.PurchaseOrderID)
    <!--Add-Edit code start-->
    <div class="col-md-12">
        <!-- BEGIN VALIDATION STATES-->
        <div class="portlet box blue">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Purchase Order Receive
                </div>
            </div>
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <div class="form-horizontal">
                    <div class="form-body">
                        <h3 class="form-section">Purchase Order Details</h3>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SellerPartyID, "Seller Party", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("SellerPartyID", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.SellerPartyID, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.StatusID, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("StatusID", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PONo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.PONo, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.PONo, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.PODate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.PODate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.PODate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <h3 class="form-section">Purchase Order Receive Items</h3>

                        <table class="table table-striped table-bordered table-advance table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        Item
                                    </th>
                                    <th>
                                        Puchase Price
                                    </th>
                                    <th>
                                        Received Quantity
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.INV_PurchaseOrderItems)
                                {
                                    <tr>
                                        <td class="col-md-2">
                                            @Html.DisplayFor(modelItem => item.INV_Item.ItemName)
                                            @Html.HiddenFor(modelItem => item.PurchaseOrderItemID)
                                        </td>
                                        <td class="col-md-2">
                                            @Html.EditorFor(model => item.PuchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => item.PuchasePrice, "", new { @class = "text-danger" })
                                        </td>
                                        <td class="col-md-2">
                                            @Html.EditorFor(model => item.ReceivedQuantity, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => item.ReceivedQuantity, "", new { @class = "text-danger" })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="form-actions">
                        <div class="row">
                            <div class="col-md-offset-3 col-md-9">
                                <input id="btnSave" type="submit" value="Save" class="btn green" />
                                @*<input type="submit" value="Save" class="btn green" />*@
                                @Html.ActionLink("Back to List", "index", "INV_PurchaseOrder", new { @class = "btn default" })
                            </div>
                        </div>
                    </div>

                </div>
                <!-- END FORM-->
            </div>

        </div>
        <!-- END VALIDATION STATES-->
    </div>

    <!--Add-Edit code end-->
}

<script>
	var productList = [];
	var itemWiseEachStepAddTotalAmount = 0;
	$(document).ready(function () {
		$('#btnSave').click(function () {
			//AddNewPurchaseOrderWithItem();
            debugger;
            debugger;
            //$("#POReturn").submit();
            document.POReturn.submit();
        });

		$("#ItemID").change(function () {
			debugger;
			var ddlitemid = $('#ItemID').val();
			GetItemPrice(ddlitemid);
		});
		$("#PaidAmount").change(function () {

			var newAmountPending = $('#tdFinalTotal').html() - $('#PaidAmount').val() - $('#Casar').val();
			$('#PendingAmount').val(newAmountPending);
		});
		$("#Casar").change(function () {

			var newAmountPending = $('#tdFinalTotal').html() - $('#PaidAmount').val() - $('#Casar').val();
			$('#PendingAmount').val(newAmountPending);
		});
		$("#btnModalOK").click(function () {
			$('#InvoiceMessage').modal('hide');
			location.reload(true);
		});

        $('input:radio[name=isLocal]').change(function () {
            if ($('input[name=isLocal]:checked').val() == "True") {
                $('#divSGST').show();
                $('#divCGST').show();
                $('#divIGST').hide();
            }
            else if ($('input[name=isLocal]:checked').val() == "False") {
                $('#divCGST').hide();
                $('#divSGST').hide();
                $('#divIGST').show();
            } else {
                $('#divCGST').hide();
                $('#divSGST').hide();
                $('#divIGST').hide();
            }
        });


		$(".add-row").click(function () {

			debugger;
			$('#divItemList').show();
			if ($('#ItemID').val() != null && $('#txtItemPrice').val() != "") {
				debugger;
				var itemid = $("#ItemID").val();
				var itemname = $("#ItemID").find('option:selected').text();
				var priceAmount = $("#txtItemPrice").val();
				var invoiceID = 1;
				var quantity = $('#txtQuantity').val();
				productList.push({
					//InvoiceItemID: InvoiceItemID,
					//InvoiceID: invoiceID,
					ItemID: itemid,
					Quantity: quantity,
					//Created: Created,
					//Modified: Modified,
					//Remarks:Remarks,
					PricePerUnit: priceAmount
				});
				invoiceID++;
				var markup = "<tr><td><input type='checkbox' name='record' id='" + itemid + "'></td><td>" + itemname + "</td><td>" + quantity + "</td><td>" + priceAmount + "</td><td>" + (priceAmount * quantity) + "</td></tr>";
				$("table .list").prepend(markup);
				itemWiseEachStepAddTotalAmount += (priceAmount * quantity);
				$('#tdItemTotal').html(itemWiseEachStepAddTotalAmount);
				FinalCalculation();
			}
		});

	});


	function AddNewPurchaseOrderWithItem() {
		debugger;
		var newData = {
            PuchasePrice: $('#PuchasePrice').val(),
            ReceivedQuantity: $('#ReceivedQuantity').val(),
            PurchaseOrderItemID: $('#PurchaseOrderItemID').val(),
            PurchaseOrderID: $('#PurchaseOrderID').val(),
		};
		debugger;
		console.log(newData);

		$.ajax({
			url: '@Url.Action("AddPurchaseOrder", "INV_PurchaseOrder")',
			data: JSON.stringify(newData),
			type: "POST",
			contentType: "application/json;charset=utf-8",
			dataType: "json",
			success: function (result) {
				debugger;
				$('#InvoiceMessage').modal('show');
			},
			error: function (errormessage) {
				debugger;

			}
		});
	}

</script>


<!-- Modal -->
<div class="modal fade" id="InvoiceMessage" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Succesfully</h4>
            </div>
            <div class="modal-body">
                <p>Succesfully submitted PO Return data.</p>
            </div>
            <div class="modal-footer">
                <button id="btnModalOK" type="button" class="btn btn-default">Close</button>
                @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>

    </div>
</div>