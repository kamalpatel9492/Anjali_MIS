@model AnjaliMIS.ViewModals.INV_PurchaseOrderViewModal

@{
    ViewBag.Title = "Edit";
}
@section breadcrumb {
    <li>
        @Html.ActionLink("Inventory Dashboard", "Dashboard",
                                new { controller = "INV_Item" })
    </li>
}
<style>
    input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    margin: 0; 
}
</style>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Created)
    @Html.HiddenFor(model => model.PurchaseOrderID)

    <!--Add-Edit code start-->
    <div class="col-md-12">
        <!-- BEGIN VALIDATION STATES-->
        <div class="portlet box blue">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Purchase Order
                </div>
            </div>
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <div class="form-horizontal">
                    <div class="form-body">
                        <h3 class="form-section">Purchase Order Details</h3>
                        @Html.ValidationSummary(true, string.Empty, new { @class = "help-inline", @style = "color:red" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.SellerPartyID, "Seller Party", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("SellerPartyID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SellerPartyID, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsLocal, "Is Local ?", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4 radio-list">
                                <label class="radio-inline">
                                    <input type="radio" name="isLocal" value="True">Yes
                                </label>
                                <label class="radio-inline">
                                    <input type="radio" name="isLocal" value="False">No
                                </label>
                            </div>
                        </div>

                        <div id="divCGST" class="form-group" hidden>
                            @Html.LabelFor(model => model.CGST, "CGST", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <select id="ddlCGST" class="form-control"></select>
                            </div>
                            @Html.LabelFor(model => model.SGST, "SGST", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @*<select id="ddlSGST" class="form-control"></select>*@
                                <input id="txtSGSTValue" type="text" class="form-control" readonly="readonly" />
                            </div>
                        </div>

                        <div class="form-group" id="divIGST" hidden>
                            @Html.LabelFor(model => model.IGST, "IGST", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <select id="ddlIGST" class="form-control"></select>
                            </div>
                        </div>
                        <h3 class="form-section">Purchase Order Items</h3>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ItemID, "Item", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownList("ItemID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-md-2">Quantity</label>
                            <div class="col-md-2">
                                <input id="txtQuantity" type="text" class="form-control allownumericwithoutdecimal" />
                            </div>
                            <label class="control-label col-md-2">Item Price</label>
                            <div class="col-md-2">
                                <input id="txtItemPrice" type="text" class="form-control allownumericwithdecimal" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2"></label>
                            <div class="col-md-10">
                                <a href="#" class="button bu-block btn default glyphicon glyphicon-plus add-row"> Add Item</a>
                            </div>
                        </div>
                        <div id="divItemList" class="form-group" hidden>
                            <label class="control-label col-md-2">Item List</label>
                            <div class="col-md-10">
                                <table class="table table-bordered table-responsive" id="selected_units">
                                    <thead>
                                        <tr>
                                            <th>Select</th>
                                            <th>Item Name</th>
                                            <th class="text-right">Quantity</th>
                                            <th class="text-right">Price</th>
                                            <th class="text-right">Total</th>
                                        </tr>
                                    </thead>
                                    <tbody class="list">
                                        <tr>
                                            <td colspan="4" class="text-right">Item Total</td>
                                            <td colspan="4" id="tdItemTotal" class="text-right"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">SGST <span id="tdSpanPercentageSGSTValue"></span></td>
                                            <td colspan="4" id="tdSGST" class="text-right"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">CGST <span id="tdSpanPercentageCGSTValue"></span></td>
                                            <td colspan="4" id="tdCGST" class="text-right"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">IGST <span id="tdSpanPercentageIGSTValue"></span></td>
                                            <td colspan="4" id="tdIGST" class="text-right"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">Final Total</td>
                                            <td colspan="4" id="tdFinalTotal" class="text-right"></td>
                                        </tr>
                                    </tbody>

                                </table>
                                <button type="button" style="float:right;" class="delete-row">Delete Item</button>
                            </div>
                        </div>
                        <h3 class="form-section">Payment Details</h3>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Casar, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.Casar, new { htmlAttributes = new { @class = "form-control allownumericwithoutdecimal" } })
                                @Html.ValidationMessageFor(model => model.Casar, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.PaidAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.PaidAmount, new { htmlAttributes = new { @class = "form-control allownumericwithoutdecimal" } })
                                @Html.ValidationMessageFor(model => model.PaidAmount, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.PendingAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.PendingAmount, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })
                                @Html.ValidationMessageFor(model => model.PendingAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-actions">
                        <div class="row">
                            <div class="col-md-offset-3 col-md-9">
                                @if (ViewData.ModelState.IsValid)
                                {
                                    <input id="btnSave" type="button" value="Save" class="btn green" />
                                    @*<input type="submit" value="Save" class="btn green" />*@
                                    @Html.ActionLink("Back to List", "index", "INV_PurchaseOrder",null, new { @class = "btn default" })
                                }


                            </div>
                        </div>
                    </div>

                </div>
                <!-- END FORM-->
            </div>

        </div>
        <!-- END VALIDATION STATES-->
    </div>

    <!--Add-Edit code end-->
}

<script>

    var productList = [];
    var itemWiseEachStepAddTotalAmount = 0;
    var CGSTID = 0;
    var IGSTID = 0;
    var SGSTID = 0;
   @if (Model.IsLocal == true) {
        @: $('input:radio[name="isLocal"][value="True"]').attr('checked', true);
    }
    else {
        @: $('input:radio[name="isLocal"][value="False"]').attr('checked', true);
    }
    $(document).ready(function () {

        $(".allownumericwithoutdecimal").on("keypress keyup blur",function (event) {    
            $(this).val($(this).val().replace(/[^\d].+/, ""));
            if ((event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });
        
        $(".allownumericwithdecimal").on("keypress keyup blur",function (event) {
            //this.value = this.value.replace(/[^0-9\.]/g,'');
            $(this).val($(this).val().replace(/[^0-9\.]/g,''));
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });
        //RetrieveSGST();
        RetrieveCGST();
        RetrieveIGST();

        $("#ddlCGST").change(function () {

            var changeSGSTValueDependOnCGST=$("option:selected","#ddlCGST").attr("data-id");  
            $("#txtSGSTValue").val("SGST-"+changeSGSTValueDependOnCGST);
            $('#ddlCGST option[data-id="'+ changeSGSTValueDependOnCGST +'"]').prop('selected', true);
            FinalCalculation();
        });
        //$("#ddlSGST").change(function () {
        //    FinalCalculation();
        //});

        $("#ddlIGST").change(function () {
            FinalCalculation();
        });


     @if (Model.INV_PurchaseOrderItems != null)
    {
         @:CGSTID = @Model.CGST
         @:IGSTID = @Model.IGST
         @:SGSTID = @Model.SGST
         @:$('#divItemList').show();
        foreach (var @item in Model.INV_PurchaseOrderItems)
        {
            @:  productList.push({ ItemID: @item.ItemID, OrderedQuantity: @item.OrderedQuantity, ReceivedQuantity: @item.OrderedQuantity, PuchasePrice: @item.PuchasePrice, PricePerUnit:@item.PuchasePrice});

            @:var itemid = @item.ItemID;
            @:var itemname ='@item.INV_Item.ItemName';
            @:var Remarks;
            if (@item.Remarks != "") {
                @: Remarks='@item.Remarks';
            }
            @:var quantity = @item.OrderedQuantity;
            @:var priceAmount = @item.PuchasePrice;
            @:var markup = "<tr><td><input type='checkbox' name='record' id='" + itemid + "'></td><td>" + itemname + "</td><td class='text-right'>" + quantity + "</td><td class='text-right'>" + priceAmount + "</td><td class='text-right'>" + (priceAmount * quantity) +"</td></tr>";
            @:itemWiseEachStepAddTotalAmount += (priceAmount * quantity);
            @:$("table .list").prepend(markup);
        }
        @:$('#tdItemTotal').html(itemWiseEachStepAddTotalAmount);
        @:FinalCalculation();
    }

        $('#btnSave').click(function () {

            var response = true;
            response = ValidationRemarks(false);
            if (response == false)
            {
                alert('Please fill all the compulsory field(s).');
                return false;
            }
            else
            {
                AddNewPurchaseOrderWithItem();
            }

		});
		$("#ItemID").change(function () {
			var ddlitemid = $('#ItemID').val();
			GetItemPrice(ddlitemid);
		});
		$("#PaidAmount").change(function () {

		    var newAmountPending = $('#tdFinalTotal').html() - $('#PaidAmount').val() - $('#Casar').val();
		    
            $('#PendingAmount').val(parseInt(newAmountPending));
		});
		$("#Casar").change(function () {

		    var newAmountPending = $('#tdFinalTotal').html() - $('#PaidAmount').val() - $('#Casar').val();
            $('#PendingAmount').val(parseInt(newAmountPending));
		});
		$("#btnModalOK").click(function () {
			$('#InvoiceMessage').modal('hide');
			location.reload(true);
		});



        $('input:radio[name=isLocal]').change(function () {
            CheckIsLocal();
        });
                CheckIsLocal();
                function CheckIsLocal() {
                    if ($('input[name=isLocal]:checked').val() == "True") {
                //$('#divSGST').show();
                $('#divCGST').show();
                $('#divIGST').hide();
                $('#ddlIGST').val("0");
                }
            else if ($('input[name=isLocal]:checked').val() == "False") {
                $('#divCGST').hide();
                //$('#divSGST').hide();
                $('#divIGST').show();
                $('#ddlCGST').val("0");
                $('#ddlSGST').val("0");
                } else {
                $('#divCGST').hide();
                //$('#divSGST').hide();
                $('#divIGST').hide();
                }
            };

		$(".add-row").click(function () {

			$('#divItemList').show();
			if ($('#ItemID').val() != null && $('#txtItemPrice').val() != "") 
			{
			    var itemid = $("#ItemID").val();
			    var itemname = $("#ItemID").find('option:selected').text();
			    var priceAmount = $("#txtItemPrice").val();
			    var invoiceID = 1;
			    var quantity = $('#txtQuantity').val();
			    if(parseInt($('#txtQuantity').val()) != 0 && quantity !="")
			    {
			        productList.push({
			            //InvoiceItemID: InvoiceItemID,
			            //InvoiceID: invoiceID,
			            ItemID: itemid,
			            OrderedQuantity: quantity,
			            ReceivedQuantity: quantity,
			            PuchasePrice: priceAmount,
			            PricePerUnit: priceAmount
			        });
			    
			        invoiceID++;
			        var markup = "<tr><td><input type='checkbox' name='record' id='" + itemid + "'></td><td>" + itemname + "</td><td class='text-right'>" + quantity + "</td><td class='text-right'>" + priceAmount + "</td><td class='text-right'>" + (priceAmount * quantity) + "</td></tr>";
			        $("table .list").prepend(markup);
			        itemWiseEachStepAddTotalAmount += (priceAmount * quantity);
			        $('#tdItemTotal').html(itemWiseEachStepAddTotalAmount);
			        FinalCalculation();
			        $('html, body').animate({
			            scrollTop: $("#divItemList").offset().top
			        }, 2000);
			    }
			} 
		});
            


		$(".delete-row").click(function () {
			$("table tbody").find('input[name="record"]').each(function () {
                    if ($(this).is(":checked")) {
                      
                        var checkId = this.id;
					$(this).parents("tr").remove();
                    
                        //$.grep(productList, function (e) {
                        
                        //     e.ItemID == checkId;
                        //});
                        
					$.each(productList, function (key, value) {
                       
                            var checkitemid = value.ItemID;
                            var deductquantity = value.OrderedQuantity;
                            var deductpriceperunit = value.PuchasePrice;
                            if (checkId == checkitemid) {
                                //productList.pop(key);
                                productList.splice(key, 1);
                                itemWiseEachStepAddTotalAmount = itemWiseEachStepAddTotalAmount - (deductquantity * deductpriceperunit);
							$('#tdItemTotal').html(itemWiseEachStepAddTotalAmount);
                                FinalCalculation();
                                return false;
                            }

                        });
                    }
                });

            });
        });
	function GetItemPrice(ddlitemid) {
		$.ajax({
			type: 'POST',
			dataType: "json",
			data: "{ ItemID:'" + ddlitemid + "'}",
			contentType: "application/json;charset=utf-8",
			url: '@Url.Action("DropDownItemPrice", "INV_Invoice")',
			success: (function (result) {
				
				$('#txtItemPrice').val(result);

			}),
			error: function (errormessage) {
				alert(errormessage.responseText);
			}
		});
	}

    function AddNewPurchaseOrderWithItem() {
       
        if(productList.length==0)
        {
            alert("please insert item");
            return false;
        }

		var newData = {
			//InvoiceID: InvoiceID,
			PurchaseOrderID: $('#PurchaseOrderID').val(),
			SellerPartyID: $('#SellerPartyID').val(),
			//UserID: $('#ddlupdateInstituteType').val(),
			Amount: $('#Amount').val(),
			PaidAmount: $('#PaidAmount').val(),
			StatusID: $('#StatusID').val(),
			//Created: Created,
			//Modified: Modified,
			Remarks: $('#Remarks').val(),
            PONo: $('#PONo').val(),
            AmountPending: $('#PendingAmount').val(),
            PendingAmount : $('#PendingAmount').val(),
			//FinYearID: $('#FinYearID').val(),
            CGST: $('#ddlCGST').val(),
            CGSTAmount: $('#tdCGST').html(),
            SGST: $('#ddlCGST').val(),
            SGSTAmount: $('#tdSGST').html(),
            IGST: $('#ddlIGST').val(),
            IGSTAmount: $('#tdIGST').html(),
            IsLocal: $('input[name=isLocal]:checked').val(),
			IsActive: $('#IsActive').val(),
			Casar: $('#Casar').val(),
			TotalAmount: $('#tdFinalTotal').html(),
            INV_PurchaseOrderItems: productList
		};
		

		$.ajax({
			url: '@Url.Action("AddPurchaseOrder", "INV_PurchaseOrder")',
			data: JSON.stringify(newData),
			type: "POST",
			contentType: "application/json;charset=utf-8",
			dataType: "json",
			success: function (result) {


				$('#InvoiceMessage').modal('show');
			},
			error: function (errormessage) {

			}
		});
    }
    function ValidationRemarks()
    {    
        var isValid = true;
        if ($('#Remarks').val().trim() == "")
        {
            $('#Remarks').css('border-color', 'Red');
            isValid = false;
        }
        else {
            $('#Remarks').css('border-color', '#ccc');
        }
        return isValid;
    }

    function FinalCalculation() {

        var igstpercentage = $("#ddlIGST option:selected").attr("data-id");
        var igstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * igstpercentage / 100);
        if (igstCalculation > 0)
            $('#tdIGST').html(igstCalculation);
        else
            $('#tdIGST').html(0);
        if (igstpercentage > 0)
            $('#tdSpanPercentageIGSTValue').html("(" + igstpercentage + "%)");
        else
            $('#tdSpanPercentageIGSTValue').html("(" + 0 + "%)");
        var cgstpercentage = $("#ddlCGST option:selected").attr("data-id");
        var cgstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * cgstpercentage / 100);
        if (cgstCalculation > 0)
            $('#tdCGST').html(cgstCalculation);
        else
            $('#tdCGST').html(0);
        if (cgstpercentage > 0)
            $('#tdSpanPercentageCGSTValue').html("(" + cgstpercentage + "%)");
        else
            $('#tdSpanPercentageCGSTValue').html("(" + 0 + "%)");
        var sgstpercentage = $("#ddlCGST option:selected").attr("data-id");
        var sgstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * sgstpercentage / 100);
        $('#tdSGST').html(sgstCalculation);
        $('#tdSpanPercentageSGSTValue').html("(" + sgstpercentage + "%)");
        var finaltotal = itemWiseEachStepAddTotalAmount + parseFloat($('#tdIGST').html()) + parseFloat($('#tdCGST').html()) + parseFloat($('#tdSGST').html());
        $('#tdFinalTotal').html(Math.round(finaltotal,2));
        
        //var newAmountPending = finaltotal - $('#AmountReceived').val() - $('#Casar').val();
        var newAmountPending = parseInt(finaltotal) - $('#PaidAmount').val() - $('#Casar').val();
        $('#PendingAmount').val(newAmountPending);

        $('#txtQuantity').val("");
        $('#txtItemPrice').val("");
    }

    //OLD Calculation
	//function FinalCalculation() {
	//	var igstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * 5 / 100);
	//	$('#tdIGST').html(igstCalculation);
	//	var cgstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * 5 / 100);
	//	$('#tdCGST').html(cgstCalculation);
	//	var sgstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * 5 / 100);
	//	$('#tdSGST').html(sgstCalculation);
	//	var finaltotal = itemWiseEachStepAddTotalAmount + parseFloat($('#tdIGST').html()) + parseFloat($('#tdCGST').html()) + parseFloat($('#tdSGST').html());
	//	$('#tdFinalTotal').html(finaltotal);

	//	var newAmountPending = finaltotal - $('#PaidAmount').val() - $('#Casar').val();
 //       $('#PendingAmount').val(newAmountPending);
 //       $('html, body').animate({
 //           scrollTop: $("#divItemList").offset().top
 //       }, 2000);
 //       $('#txtQuantity').val("");
 //       $('#txtItemPrice').val("");
	//}
    //Retrive SGST
    function RetrieveSGST() {
        $.ajax({
            url: '@Url.Action("RetrieveSGST", "INV_Invoice")',
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: (function (result) {

                if (result.length > 0) {

                    $("#ddlSGST").empty();
                    $("#ddlSGST").append('<option value="0" data-id="0">Select SGST</option>');
                    for (var i = 0; i < result.length; i++) {
                        var option = $("<option/>");
                        option.attr("value", result[i].TaxID).text(result[i].Tax).attr("data-id", result[i].Percentage);;
                        $("#ddlSGST").append(option);
                    }
                    if (SGSTID > 0)
                        $('#ddlSGST').val(SGSTID);
                    else
                        $('#ddlSGST').val(0);
                     FinalCalculation();
                }
            }),
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    //Retrive CGST
    function RetrieveCGST() {
        $.ajax({
            url: '@Url.Action("RetrieveCGST", "INV_Invoice")',
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: (function (result) {

                if (result.length > 0) {

                    $("#ddlCGST").empty();
                    $("#ddlCGST").append('<option value="0" data-id="0">Select CGST</option>');
                    for (var i = 0; i < result.length; i++) {
                        var option = $("<option/>");
                        option.attr("value", result[i].TaxID).text(result[i].Tax).attr("data-id", result[i].Percentage);
                        $("#ddlCGST").append(option);
                    }
                    if (CGSTID > 0){
                        $('#ddlCGST').val(CGSTID);
                        $('#txtSGSTValue').val("SGST-"+$("option:selected","#ddlCGST").attr("data-id"));
                    }
                    else
                    {
                        $('#ddlCGST').val(0);
                        $('#txtSGSTValue').val(0);
                    }
                    FinalCalculation();

                }
            }),
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    //Retrive IGST
    function RetrieveIGST() {
        $.ajax({
            url: '@Url.Action("RetrieveIGST", "INV_Invoice")',
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: (function (result) {

                if (result.length > 0) {

                    $("#ddlIGST").empty();
                    $("#ddlIGST").append('<option value="0" data-id="0">Select IGST</option>');
                    for (var i = 0; i < result.length; i++) {
                        var option = $("<option/>");
                        option.attr("value", result[i].TaxID).text(result[i].Tax).attr("data-id", result[i].Percentage);
                        $("#ddlIGST").append(option);
                    }
                    if (IGSTID > 0)
                        $('#ddlIGST').val(IGSTID);
                    else
                        $('#ddlIGST').val(0);

                    FinalCalculation();

                }
            }),
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
</script>


<!-- Modal -->
<div class="modal fade" id="InvoiceMessage" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Succesfully</h4>
            </div>
            <div class="modal-body">
                <p>Succesfully submitted PO data.</p>
            </div>
            <div class="modal-footer">
                <button id="btnModalOK" type="button" class="btn btn-default">Close</button>
                @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>

    </div>
</div>