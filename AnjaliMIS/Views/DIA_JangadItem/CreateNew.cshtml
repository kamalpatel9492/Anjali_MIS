@model AnjaliMIS.Models.DIA_Jangad
@{
    ViewBag.Title = "CreateNew";
}
<script src="~/Scripts/jquery-3.3.1.min.js"></script>

@using (Html.BeginForm())
{
    @*<h2>CreateNew</h2>*@
    <div class="col-md-12">
        <div class="portlet box blue">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Jangad Fresh
                </div>
            </div>
            <div class="portlet-body form">
                <div class="form-horizontal">
                    <div class="form-body">
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        @*<div class="form-group">
                            @Html.LabelFor(model => model.CompanyID, "Jangad", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("JangadID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.PartyID, "Jangad", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("PartyID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PartyID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.PricePerCarat, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.PricePerCarat, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PricePerCarat, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsLocal, "Is Local ?", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4 radio-list">
                                <label class="radio-inline">
                                    <input type="radio" name="isLocal" value="True">Yes
                                </label>
                                <label class="radio-inline">
                                    <input type="radio" name="isLocal" value="False">No
                                </label>
                            </div>
                        </div>

                        <div id="divCGST" class="form-group" hidden>
                            @Html.LabelFor(model => model.CGST, "CGST", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <select id="ddlCGST" class="form-control"></select>
                            </div>
                            @Html.LabelFor(model => model.SGST, "SGST", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @*<select id="ddlSGST" class="form-control"></select>*@
                                <input id="txtSGSTValue" type="text" class="form-control" readonly="readonly" />
                            </div>
                        </div>

                        <div class="form-group" id="divIGST" hidden>
                            @Html.LabelFor(model => model.IGST, "IGST", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <select id="ddlIGST" class="form-control"></select>
                            </div>
                        </div>
                        <h3 class="form-section">Jangad Items</h3>
                        <div class="form-group">
                            @*@Html.LabelFor(model => model., "Item", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownList("ItemID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
                            </div>*@
                            <label class="control-label col-md-2">Weight</label>
                            <div class="col-md-2">
                                <input id="txtWeight" type="text" class="form-control allownumericwithoutdecimal" />
                            </div>
                            <label class="control-label col-md-2">Size</label>
                            <div class="col-md-2">
                                <input id="txtSize" type="text" class="form-control allownumericwithoutdecimal" />
                            </div>
                            <label class="control-label col-md-2">PavalionAngle</label>
                            <div class="col-md-2">
                                <input id="txtPavalionAngle" type="text" class="form-control allownumericwithdecimal" />
                            </div>
                        </div>
                        <div class="form-group">
                           
                            <label class="control-label col-md-2">CrownAngle</label>
                            <div class="col-md-2">
                                <input id="txtCrownAngle" type="text" class="form-control allownumericwithoutdecimal" />
                            </div>
                            <label class="control-label col-md-2">CrownWeight</label>
                            <div class="col-md-2">
                                <input id="txtCrownWeight" type="text" class="form-control allownumericwithoutdecimal" />
                            </div>
                            <label class="control-label col-md-2">Girdle</label>
                            <div class="col-md-2">
                                <input id="txtGirdle" type="text" class="form-control allownumericwithdecimal" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">Para1</label>
                            <div class="col-md-2">
                                <input id="txtPara1" type="text" class="form-control allownumericwithoutdecimal" />
                            </div>
                            <label class="control-label col-md-2">Para2</label>
                            <div class="col-md-2">
                                <input id="txtPara2" type="text" class="form-control allownumericwithoutdecimal" />
                            </div>
                            <label class="control-label col-md-2">Para3</label>
                            <div class="col-md-2">
                                <input id="txtPara3" type="text" class="form-control allownumericwithdecimal" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2"></label>
                            <div class="col-md-10">
                                <a href="#" class="button bu-block btn default glyphicon glyphicon-plus add-row"> Add Item</a>
                            </div>
                        </div>

                        <div id="divJangadList" class="form-group" hidden>
                            <label class="control-label col-md-2">Jangad List</label>
                            <div class="col-md-10">
                                <table class="table table-bordered table-responsive" id="selected_units">
                                    <thead>
                                        <tr>
                                            <th>Select</th>
                                            <th>Weight</th>
                                            <th class="text-right">Size</th>
                                            <th class="text-right">PavalionAngle</th>
                                            <th class="text-right">CrownAngle</th>
                                            <th class="text-right">CrownWeight</th>
                                            <th class="text-right">Girdle</th>
                                            <th class="text-right">Para1</th>
                                            <th class="text-right">Para2</th>
                                            <th class="text-right">Para3</th>
                                        </tr>
                                    </thead>
                                    <tbody class="list">
                                        @*<tr>
                                            <td colspan="4" class="text-right">Item Total</td>
                                            <td colspan="4" id="tdItemTotal" class="text-right"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">SGST <span id="tdSpanPercentageSGSTValue"></span></td>
                                            <td colspan="4" id="tdSGST" class="text-right"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">CGST <span id="tdSpanPercentageCGSTValue"></span></td>
                                            <td colspan="4" id="tdCGST" class="text-right"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">IGST <span id="tdSpanPercentageIGSTValue"></span></td>
                                            <td colspan="4" id="tdIGST" class="text-right"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">Final Total</td>
                                            <td colspan="4" id="tdFinalTotal" class="text-right"></td>
                                        </tr>*@
                                    </tbody>

                                </table>
                                <button type="button" style="float:right;" class="delete-row">Delete Item</button>
                            </div>
                        </div>

                    </div>
                    <div class="form-actions">
                        <div class="row">
                            <div class="col-md-offset-3 col-md-9">
                                <input type="button" id="btnSave" value="Save" class="btn green" />
                                @Html.ActionLink("Back to List", "index", "DIA_JangadItem", new { @class = "btn default" })
                            </div>
                        </div>
                    </div>

                </div>
                <!-- END FORM-->
            </div>
        </div>
        <!-- END VALIDATION STATES-->
    </div>
}

<script>
    var jangadList = [];
    var CGSTID = 0;
    var IGSTID = 0;
    var SGSTID = 0;
    var i = 0;
   @if (Model.IsLocal == true) {
        @: $('input:radio[name="isLocal"][value="True"]').attr('checked', true);
   }
   else {
       @: $('input:radio[name="isLocal"][value="False"]').attr('checked', true);
   }
    $(document).ready(function ()
    {
        RetrieveCGST();
        RetrieveIGST();

        $('input:radio[name=isLocal]').change(function () {
            CheckIsLocal();
        });
        CheckIsLocal();
        $("#btnSave").click(function () {
            
            var response = true;
            //response = ValidationRemarks(false);
            if (response == false) {
                alert('Please fill all the compulsory field(s).');
                return false;
            }
            else {
                SaveJangadList();
            }
        });

        $("#ddlCGST").change(function () {

            var changeSGSTValueDependOnCGST = $("option:selected", "#ddlCGST").attr("data-id");
            $("#txtSGSTValue").val("SGST-" + changeSGSTValueDependOnCGST);
            $('#ddlCGST option[data-id="' + changeSGSTValueDependOnCGST + '"]').prop('selected', true);
            //FinalCalculation();
        });

        $(".add-row").click(function () {
            i++;
            $('#divJangadList').show();


            var weight = $('#txtWeight').val();
            var size = $('#txtSize').val();
            var pavalionAngle = $('#txtPavalionAngle').val();
            var crownAngle = $('#txtCrownAngle').val();
            var crownWeight = $('#txtCrownWeight').val();
            var girdle = $('#txtGirdle').val();
            var para1 = $('#txtPara1').val();
            var para2 = $('#txtPara2').val();
            var para3 = $('#txtPara3').val();

            jangadList.push({
                //InvoiceItemID: InvoiceItemID,
                //InvoiceID: invoiceID,
                Weight: weight,
                Size: size,
                PavalionAngle: pavalionAngle,
                CrownAngle: crownAngle,
                CrownWeight: crownWeight,
                Girdle:girdle,
                Para1: para1,
                Para2: para2,
                Para3: para3,
            });
            

            var markup = "<tr>";
            markup += "<td><input type='checkbox' name='record' id='" + i + "'></td>";
            markup += "<td>" + weight + "</td>";
            markup += "<td class='text-right'>" + size + "</td>";
            markup += "<td class='text-right'>" + pavalionAngle + "</td>";
            markup += "<td class='text-right'>" + crownAngle + "</td>";
            markup += "<td class='text-right'>" + crownWeight + "</td>";
            markup += "<td class='text-right'>" + girdle + "</td>";
            markup += "<td class='text-right'>" + para1 + "</td>";
            markup += "<td class='text-right'>" + para2 + "</td>";
            markup += "<td class='text-right'>" + para3 + "</td>";
            markup +="</tr>";

            //$("table .list").prepend(markup);
            $("table .list").append(markup);
        });



        $(".delete-row").click(function () {
            $("table tbody").find('input[name="record"]').each(function () {
                if ($(this).is(":checked")) {

                    var checkId = this.id;
                    $(this).parents("tr").remove();

                    $.each(jangadList, function (key, value) {

                        //var checkitemid = value.ItemID;
                        //var deductquantity = value.OrderedQuantity;
                        //var deductpriceperunit = value.PuchasePrice;
                        //if (checkId == checkitemid) {
                        //    //productList.pop(key);
                        //    productList.splice(key, 1);
                        //    itemWiseEachStepAddTotalAmount = itemWiseEachStepAddTotalAmount - (deductquantity * deductpriceperunit);
                        //    $('#tdItemTotal').html(itemWiseEachStepAddTotalAmount);
                        //    FinalCalculation();
                        //    return false;
                        //}

                    });
                }
            });

        });
    });

    
    function SaveJangadList()
    {
        debugger;
        alert('saved');
        if (jangadList.length == 0) {
            alert("please jangad item");
            return false;
        }

        var newData = {
            //CompanyID: CompanyID,//ask to kamal
            PartyID: $('#PartyID').val(),
            Quantity: $('#Quantity').val(),
            Weight: $('#Weight').val(),
            //StatusID: $('#StatusID').val(),//ask to kamal
            //Amount: $('#Amount').val(),
            //RecivedAmount: $('#RecivedAmount').val(),
            //PendingAmount: $('#PendingAmount').val(),
            //JangadNo: $('#JangadNo').val(),
            //Created: Created,
            //Modified: Modified,
            Remarks: $('#Remarks').val(),
            PricePerCarat: $('#PricePerCarat').val(),
            //FinYearID: $('#FinYearID').val(),
            CGST: $('#ddlCGST').val(),
            CGSTAmount: $('#tdCGST').html(),
            SGST: $('#ddlCGST').val(),
            SGSTAmount: $('#tdSGST').html(),
            IGST: $('#ddlIGST').val(),
            IGSTAmount: $('#tdIGST').html(),
            //TDS: $('#TDS').html(),asko to kamal
            IsLocal: $('input[name=isLocal]:checked').val(),
            IsActive: $('#IsActive').val(),
            Casar: $('#Casar').val(),
            //TotalAmount: $('#tdFinalTotal').html(),ask to kamal
            DIA_JangadItems: jangadList
        };
        debugger;
        $.ajax({
            url: '@Url.Action("AddJangad", "DIA_JangadItem")',
            data: JSON.stringify(newData),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {

                debugger;
                $('#InvoiceMessage').modal('show');
            },
            error: function (errormessage) {

            }
        });
    }




    function CheckIsLocal() {
        if ($('input[name=isLocal]:checked').val() == "True") {
            //$('#divSGST').show();
            $('#divCGST').show();
            $('#divIGST').hide();
            $('#ddlIGST').val("0");
        }
        else if ($('input[name=isLocal]:checked').val() == "False") {
            $('#divCGST').hide();
            //$('#divSGST').hide();
            $('#divIGST').show();
            $('#ddlCGST').val("0");
            $('#ddlSGST').val("0");
        }
        else {
            $('#divCGST').hide();
            //$('#divSGST').hide();
            $('#divIGST').hide();
        }
    }

        //Retrive CGST
        function RetrieveCGST() {
            $.ajax({
                url: '@Url.Action("RetrieveCGST", "INV_Invoice")',
                type: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: (function (result) {

                    if (result.length > 0) {

                        $("#ddlCGST").empty();
                        $("#ddlCGST").append('<option value="0" data-id="0">Select CGST</option>');
                        for (var i = 0; i < result.length; i++) {
                            var option = $("<option/>");
                            option.attr("value", result[i].TaxID).text(result[i].Tax).attr("data-id", result[i].Percentage);
                            $("#ddlCGST").append(option);
                        }
                        if (CGSTID > 0) {
                            $('#ddlCGST').val(CGSTID);
                            $('#txtSGSTValue').val("SGST-" + $("option:selected", "#ddlCGST").attr("data-id"));
                        }
                        else {
                            $('#ddlCGST').val(0);
                            $('#txtSGSTValue').val(0);
                        }
                        //FinalCalculation();

                    }
                }),
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }

        //Retrive IGST
        function RetrieveIGST() {
            $.ajax({
                url: '@Url.Action("RetrieveIGST", "INV_Invoice")',
                type: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: (function (result) {

                    if (result.length > 0) {

                        $("#ddlIGST").empty();
                        $("#ddlIGST").append('<option value="0" data-id="0">Select IGST</option>');
                        for (var i = 0; i < result.length; i++) {
                            var option = $("<option/>");
                            option.attr("value", result[i].TaxID).text(result[i].Tax).attr("data-id", result[i].Percentage);
                            $("#ddlIGST").append(option);
                        }
                        if (IGSTID > 0)
                            $('#ddlIGST').val(IGSTID);
                        else
                            $('#ddlIGST').val(0);

                        //FinalCalculation();

                    }
                }),
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
    </script>