@model AnjaliMIS.ViewModals.INV_InvoiceViewModal
@{
    ViewBag.Title = "Edit";
}
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Created)
    @Html.HiddenFor(model => model.InvoiceID)

    <!--Add-Edit code start-->
    <div class="col-md-12">
        <!-- BEGIN VALIDATION STATES-->
        <div class="portlet box blue">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Invoice
                </div>
            </div>
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <div class="form-horizontal">
                    <div class="form-body">
                        <h3 class="form-section">Invoice Details</h3>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CompanyID, "Company", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("CompanyID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.FinYearID, "Fin Year", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("FinYearID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FinYearID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PartyID, "Party", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("PartyID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PartyID, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.StatusID, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("StatusID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.InvoiceNo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.InvoiceNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InvoiceNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.IsLocal, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4 radio-list">
                                    <label class="radio-inline">
                                        <input type="radio" name="isLocal" value="True">Yes
                                    </label>
                                    <label class="radio-inline">
                                        <input type="radio" name="isLocal" value="False">No
                                    </label>
                            </div>
                            @Html.LabelFor(model => model.PONo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.PONo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PONo, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div id="divCGST" class="form-group" hidden>
                            @Html.LabelFor(model => model.CGST, "CGST", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select id="ddlCGST" class="form-control"></select>
                                @*@Html.DropDownList("CGST", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CGST, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div id="divSGST" class="form-group" hidden>
                            @Html.LabelFor(model => model.SGST, "SGST", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select id="ddlSGST" class="form-control"></select>
                                @*@Html.DropDownList("SGST", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SGST, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IGST, "IGST", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select id="ddlIGST" class="form-control"></select>
                                @*@Html.DropDownList("IGST", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IGST, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <h3 class="form-section">Invoice Items</h3>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ItemID, "Item", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                <select id="ddlItemList" class="form-control"></select>
                                @*@Html.DropDownList("ItemID", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })*@
                            </div>
                            <label class="control-label col-md-2">Quantity</label>
                            <div class="col-md-2">
                                <input id="txtQuantity" type="text" class="form-control" />
                            </div>
                            <label class="control-label col-md-2">Item Price</label>
                            <div class="col-md-2">
                                <input id="txtItemPrice" type="text" class="form-control" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2"></label>
                            <div class="col-md-10">
                                <a href="javascript:null" class="button bu-block btn default glyphicon glyphicon-plus add-row"> Add Item</a>
                            </div>
                        </div>
                        <div id="divItemList" class="form-group" hidden>
                            <label class="control-label col-md-2">Item List</label>
                            <div class="col-md-10">
                                <table class="table table-bordered table-responsive" id="selected_units">
                                    <thead>
                                        <tr>
                                            <th>Select</th>
                                            <th>Item Name</th>
                                            <th>Quantity</th>
                                            <th>Price</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody class="list">
                                        <tr>
                                            <td colspan="4" class="text-right">Item Total</td>
                                            <td colspan="4" id="tdItemTotal"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">SGST <span id="tdSpanPercentageSGSTValue"></span></td>
                                            <td colspan="4" id="tdSGST"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">CGST <span id="tdSpanPercentageCGSTValue"></span></td>
                                            <td colspan="4" id="tdCGST"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">IGST <span id="tdSpanPercentageIGSTValue"></span></td>
                                            <td colspan="4" id="tdIGST"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">Final Total</td>
                                            <td colspan="4" id="tdFinalTotal"></td>
                                        </tr>
                                    </tbody>

                                </table>
                                <button type="button" style="float:right;" class="delete-row">Delete Item</button>
                            </div>
                        </div>
                        <h3 class="form-section">Payment Details</h3>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Casar, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.Casar, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Casar, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.AmountReceived, "Amount Received", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.AmountReceived, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AmountReceived, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.AmountPending, "Amount Pending", htmlAttributes: new { @class = "control -label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.AmountPending, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AmountPending, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-actions">
                        <div class="row">
                            <div class="col-md-offset-3 col-md-9">
                                <input id="btnSave" type="button" value="Save" class="btn green" />
                                @*<input type="submit" value="Save" class="btn green" />*@
                                @Html.ActionLink("Back to List", "index", "INV_Invoice", new { @class = "btn default" })
                            </div>
                        </div>
                    </div>

                </div>
                <!-- END FORM-->
            </div>

        </div>
        <!-- END VALIDATION STATES-->
    </div>

    <!--Add-Edit code end-->
}
<script>
    var productList = [];
    var itemWiseEachStepAddTotalAmount = 0;
    $(document).ready(function () {
        RetrieveSGST();
        RetrieveCGST();
        RetrieveIGST();
        RetrieveitemList();

        $('#btnSave').click(function () {

            AddNewInvoiceWithItem();
        });
        $("#ddlItemList").change(function () {

            //var ddlitemid = $('#ItemID').val();
            var ddlitemid = $('#ddlItemList').val();
            GetItemPrice(ddlitemid);
        });
        $("#AmountReceived").change(function () {

            var newAmountPending = $('#tdFinalTotal').html() - $('#AmountReceived').val() - $('#Casar').val();
            $('#AmountPending').val(newAmountPending);
        });
        $("#Casar").change(function () {

            var newAmountPending = $('#tdFinalTotal').html() - $('#AmountReceived').val() - $('#Casar').val();
            $('#AmountPending').val(newAmountPending);
        });
        $("#btnModalOK").click(function () {
            $('#InvoiceMessage').modal('hide');
            location.reload(true);
        });

        //$("#IsLocal").change(function () {

        //    if ($("#IsLocal").val() == "true") {
        //        $('#divSGST').show();
        //        $('#divCGST').hide();
        //    }
        //    else if ($("#IsLocal").val() == "false") {
        //        $('#divCGST').show();
        //        $('#divSGST').hide();
        //    } else {
        //        $('#divCGST').hide();
        //        $('#divSGST').hide();
        //    }
        //    //var ddlitemid = $('#ItemID').val();
        //    //GetItemPrice(ddlitemid);
        //});

        $('input:radio[name=isLocal]').change(function () {
            if ($('input[name=isLocal]:checked').val() == "True") {
                $('#divSGST').show();
                $('#divCGST').hide();
            }
            else if ($('input[name=isLocal]:checked').val() == "False") {
                $('#divCGST').show();
                $('#divSGST').hide();
            } else {
                $('#divCGST').hide();
                $('#divSGST').hide();
            }
            //var ddlitemid = $('#ItemID').val();
            //GetItemPrice(ddlitemid);
        });

        $(".add-row").click(function () {

            
            $('#divItemList').show();
            if ($('#ddlItemList').val() != null && $('#txtItemPrice').val() != "") {
                
                var itemid = $("#ddlItemList").val();
                var itemname = $("#ddlItemList").find('option:selected').text();
                var priceAmount = $("#txtItemPrice").val();
                var invoiceID = 1;
                var quantity = $('#txtQuantity').val();
                productList.push({
                    //InvoiceItemID: InvoiceItemID,
                    //InvoiceID: invoiceID,
                    ItemID: itemid,
                    Quantity: quantity,
                    //Created: Created,
                    //Modified: Modified,
                    //Remarks:Remarks,
                    PricePerUnit: priceAmount
                });
                invoiceID++;
                var markup = "<tr><td><input type='checkbox' name='record' id='" + itemid + "'></td><td>" + itemname + "</td><td>" + quantity + "</td><td>" + priceAmount + "</td><td>" + (priceAmount * quantity) + "</td></tr>";
                $("table .list").prepend(markup);
                itemWiseEachStepAddTotalAmount += (priceAmount * quantity);
                $('#tdItemTotal').html(itemWiseEachStepAddTotalAmount);
                FinalCalculation();
            }
        });


        $(".delete-row").click(function () {
            
            $("table tbody").find('input[name="record"]').each(function () {
                if ($(this).is(":checked")) {

                    var checkId = this.id;
                    $(this).parents("tr").remove();

                    //$.grep(productList, function (e) {
                    //    
                    //     e.ItemID == checkId;
                    //});

                    $.each(productList, function (key, value) {

                        var checkitemid = value.ItemID;
                        var deductquantity = value.Quantity;
                        var deductpriceperunit = value.PricePerUnit;
                        if (checkId == checkitemid) {
                            //productList.pop(key);

                            productList.splice(key, 1);
                            itemWiseEachStepAddTotalAmount = itemWiseEachStepAddTotalAmount - (deductquantity * deductpriceperunit);
                            $('#tdItemTotal').html(itemWiseEachStepAddTotalAmount);
                            FinalCalculation();
                            return false;
                        }

                    });
                }
            });

        });
    });
    function GetItemPrice(ddlitemid) {

        $.ajax({
            type: 'POST',
            dataType: "json",
            data: "{ ItemID:'" + ddlitemid + "'}",
            contentType: "application/json;charset=utf-8",
            url: "/INV_Invoice/DropDownItemPrice",
            success: (function (result) {

                $('#txtItemPrice').val(result);

            }),
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    function AddNewInvoiceWithItem() {

        var newData = {
            //InvoiceID: InvoiceID,
            CompanyID: $('#CompanyID').val(),
            PartyID: $('#PartyID').val(),
            //UserID: $('#ddlupdateInstituteType').val(),
            Amount: $('#tdItemTotal').html(),
            AmountReceived: $('#AmountReceived').val(),
            StatusID: $('#StatusID').val(),
            //Created: Created,
            //Modified: Modified,
            Remarks: $('#Remarks').val(),
            InvoiceDate: $('#InvoiceDate').val(),
            InvoiceNo: $('#InvoiceNo').val(),
            PONo: $('#PONo').val(),
            AmountPending: $('#AmountPending').val(),
            FinYearID: $('#FinYearID').val(),
            CGST: $('#ddlCGST').val(),
            CGSTAmount: $('#tdCGST').html(),
            SGST: $('#ddlSGST').val(),
            SGSTAmount: $('#tdSGST').html(),
            IGST: $('#ddlIGST').val(),
            IGSTAmount: $('#tdIGST').html(),
            //IsLocal: $('#IsLocal').val(),
            IsLocal: $('input[name=isLocal]:checked').val(),
            IsActive: $('#IsActive').val(),
            Casar: $('#Casar').val(),
            TotalAmount: $('#tdFinalTotal').html(),
            INV_InvoiceItems: productList
        };


        $.ajax({
            url: "/INV_Invoice/AddInvoice",
            data: JSON.stringify(newData),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {


                $('#InvoiceMessage').modal('show');
            },
            error: function (errormessage) {


            }
        });
    }
    //function FinalCalculation() {
    //    var igstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * 5 / 100);
    //    $('#tdIGST').html(igstCalculation);
    //    var cgstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * 5 / 100);
    //    $('#tdCGST').html(cgstCalculation);
    //    var sgstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * 5 / 100);
    //    $('#tdSGST').html(sgstCalculation);
    //    var finaltotal = itemWiseEachStepAddTotalAmount + parseFloat($('#tdIGST').html()) + parseFloat($('#tdCGST').html()) + parseFloat($('#tdSGST').html());
    //    $('#tdFinalTotal').html(finaltotal);

    //    var newAmountPending = finaltotal - $('#AmountReceived').val() - $('#Casar').val();
    //    $('#AmountPending').val(newAmountPending);
    //}
    function FinalCalculation() {

        var igstpercentage = $("#ddlIGST option:selected").attr("data-id");
        var igstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * igstpercentage / 100);
        $('#tdIGST').html(igstCalculation);
        $('#tdSpanPercentageIGSTValue').html("(" + igstpercentage + "%)");
        var cgstpercentage = $("#ddlCGST option:selected").attr("data-id");
        var cgstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * cgstpercentage / 100);
        $('#tdCGST').html(cgstCalculation);
        $('#tdSpanPercentageCGSTValue').html("(" + cgstpercentage + "%)");
        var sgstpercentage = $("#ddlSGST option:selected").attr("data-id");
        var sgstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * sgstpercentage / 100);
        $('#tdSGST').html(sgstCalculation);
        $('#tdSpanPercentageSGSTValue').html("(" + sgstpercentage + "%)");
        var finaltotal = itemWiseEachStepAddTotalAmount + parseFloat($('#tdIGST').html()) + parseFloat($('#tdCGST').html()) + parseFloat($('#tdSGST').html());
        $('#tdFinalTotal').html(finaltotal);
        
        var newAmountPending = finaltotal - $('#AmountReceived').val() - $('#Casar').val();
        $('#AmountPending').val(newAmountPending);
    }


    //Retrive SGST
    function RetrieveSGST() {
        $.ajax({
            url: "/INV_Invoice/RetrieveSGST",
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: (function (result) {

                if (result.length > 0) {

                    $("#ddlSGST").empty();
                    $("#ddlSGST").append('<option value="0" data-id="0">Select SGST</option>');
                    for (var i = 0; i < result.length; i++) {
                        var option = $("<option/>");
                        option.attr("value", result[i].TaxID).text(result[i].Tax).attr("data-id", result[i].Percentage);;
                        $("#ddlSGST").append(option);
                    }
                }
            }),
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    //Retrive CGST
    function RetrieveCGST() {
        $.ajax({
            url: "/INV_Invoice/RetrieveCGST",
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: (function (result) {

                if (result.length > 0) {

                    $("#ddlCGST").empty();
                    $("#ddlCGST").append('<option value="0" data-id="0">Select CGST</option>');
                    for (var i = 0; i < result.length; i++) {
                        var option = $("<option/>");
                        option.attr("value", result[i].TaxID).text(result[i].Tax).attr("data-id", result[i].Percentage);
                        $("#ddlCGST").append(option);
                    }
                }
            }),
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    //Retrive IGST
    function RetrieveIGST() {
        $.ajax({
            url: "/INV_Invoice/RetrieveIGST",
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: (function (result) {

                if (result.length > 0) {

                    $("#ddlIGST").empty();
                    $("#ddlIGST").append('<option value="0" data-id="0">Select IGST</option>');
                    for (var i = 0; i < result.length; i++) {
                        var option = $("<option/>");
                        option.attr("value", result[i].TaxID).text(result[i].Tax).attr("data-id", result[i].Percentage);
                        $("#ddlIGST").append(option);
                    }
                }
            }),
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }


    //Retrive SGST
    function RetrieveitemList() {
        $.ajax({
            url: "/INV_Invoice/RetrieveItemList",
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            dataType: "json",
            success: (function (result) {

                if (result.length > 0) {

                    $("#ddlItemList").empty();
                    $("#ddlItemList").append('<option value="0">Select Item</option>');
                    for (var i = 0; i < result.length; i++) {
                        var option = $("<option/>");
                        option.attr("value", result[i].ItemID).text(result[i].ItemName);
                        $("#ddlItemList").append(option);
                    }
                }
            }),
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
</script>


<!-- Modal -->
<div class="modal fade" id="InvoiceMessage" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Succesfully</h4>
            </div>
            <div class="modal-body">
                <p>Succesfully submitted invoice data.</p>
            </div>
            <div class="modal-footer">
                <button id="btnModalOK" type="button" class="btn btn-default">Close</button>
                @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>

    </div>
</div>