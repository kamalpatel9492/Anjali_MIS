@model AnjaliMIS.ViewModals.INV_InvoiceViewModal
@{
    ViewBag.Title = "Edit";
}
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Created)
    @Html.HiddenFor(model => model.InvoiceID)

    <!--Add-Edit code start-->
    <div class="col-md-12">
        <!-- BEGIN VALIDATION STATES-->
        <div class="portlet box blue">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Invoice
                </div>
            </div>
            <div class="portlet-body form">
                <!-- BEGIN FORM-->
                <div class="form-horizontal">
                    <div class="form-body">
                        <h3 class="form-section">Invoice Details</h3>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CompanyID, "CompanyID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("CompanyID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.FinYearID, "FinYearID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("FinYearID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FinYearID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PartyID, "PartyID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("PartyID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PartyID, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.StatusID, "StatusID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("StatusID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.InvoiceNo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.InvoiceNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InvoiceNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">

                            @Html.LabelFor(model => model.IsLocal, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsLocal)
                                    @Html.ValidationMessageFor(model => model.IsLocal, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @Html.LabelFor(model => model.PONo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.PONo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PONo, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div id="divCGST" class="form-group" hidden>
                            @Html.LabelFor(model => model.CGST, "CGST", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("CGST", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CGST, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div id="divSGST" class="form-group" hidden>
                            @Html.LabelFor(model => model.SGST, "SGST", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("SGST", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SGST, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IGST, "IGST", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("IGST", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IGST, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <h3 class="form-section">Invoice Items</h3>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ItemID, "ItemID", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownList("ItemID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
                            </div>
                            <label class="control-label col-md-2">Quantity</label>
                            <div class="col-md-2">
                                <input id="txtQuantity" type="text" class="form-control" />
                            </div>
                            <label class="control-label col-md-2">Item Price</label>
                            <div class="col-md-2">
                                <input id="txtItemPrice" type="text" class="form-control" readonly />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2"></label>
                            <div class="col-md-10">
                                <a href="#" class="button bu-block btn default glyphicon glyphicon-plus add-row"> Add Item</a>
                            </div>
                        </div>
                        <div id="divItemList" class="form-group" hidden>
                            <label class="control-label col-md-2">Item List</label>
                            <div class="col-md-10">
                                <table class="table table-bordered table-responsive" id="selected_units">
                                    <thead>
                                        <tr>
                                            <th>Select</th>
                                            <th>Item Name</th>
                                            <th>Quantity</th>
                                            <th>Price</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody class="list">

                                        <tr>
                                            <td colspan="4" class="text-right">Item Total</td>
                                            <td colspan="4" id="tdItemTotal"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">SGST</td>
                                            <td colspan="4" id="tdSGST"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">CGST</td>
                                            <td colspan="4" id="tdCGST"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">IGST</td>
                                            <td colspan="4" id="tdIGST"></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right">Final Total</td>
                                            <td colspan="4" id="tdFinalTotal"></td>
                                        </tr>
                                    </tbody>

                                </table>
                                <button type="button" style="float:right;" class="delete-row">Delete Item</button>
                            </div>
                        </div>
                        <h3 class="form-section">Payment Details</h3>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Casar, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.Casar, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Casar, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.AmountReceived, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.AmountReceived, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AmountReceived, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.AmountPending, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.AmountPending, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AmountPending, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-actions">
                        <div class="row">
                            <div class="col-md-offset-3 col-md-9">
                                <input id="btnSave" type="button" value="Save" class="btn green" />
                                @*<input type="submit" value="Save" class="btn green" />*@
                                @Html.ActionLink("Back to List", "index", "INV_Invoice", new { @class = "btn default" })
                            </div>
                        </div>
                    </div>

                </div>
                <!-- END FORM-->
            </div>

        </div>
        <!-- END VALIDATION STATES-->
    </div>

    <!--Add-Edit code end-->
}
<script>
    var productList = [];
    var itemWiseEachStepAddTotalAmount = 0;
    $(document).ready(function () {
        $('#btnSave').click(function () {
            debugger;
            AddNewInvoiceWithItem();
        });
        $("#ItemID").change(function () {
            debugger;
            var ddlitemid = $('#ItemID').val();
            GetItemPrice(ddlitemid);
        });
        $("#AmountReceived").change(function () {

            var newAmountPending = $('#tdFinalTotal').html() - $('#AmountReceived').val() - $('#Casar').val();
            $('#AmountPending').val(newAmountPending);
        });
        $("#Casar").change(function () {

            var newAmountPending = $('#tdFinalTotal').html() - $('#AmountReceived').val() - $('#Casar').val();
            $('#AmountPending').val(newAmountPending);
        });
        $("#btnModalOK").click(function () {
            $('#InvoiceMessage').modal('hide');
            location.reload(true);
        });

        $("#IsLocal").change(function () {

            if ($("#IsLocal").val() == "true") {
                $('#divSGST').show();
                $('#divCGST').hide();
            }
            else if ($("#IsLocal").val() == "false") {
                $('#divCGST').show();
                $('#divSGST').hide();
            } else {
                $('#divCGST').hide();
                $('#divSGST').hide();
            }
            //var ddlitemid = $('#ItemID').val();
            //GetItemPrice(ddlitemid);
        });


        $(".add-row").click(function () {

            debugger;
            $('#divItemList').show();
            if ($('#ItemID').val() != null && $('#txtItemPrice').val() != "") {
                debugger;
                var itemid = $("#ItemID").val();
                var itemname = $("#ItemID").find('option:selected').text();
                var priceAmount = $("#txtItemPrice").val();
                var invoiceID = 1;
                var quantity = $('#txtQuantity').val();
                productList.push({
                    //InvoiceItemID: InvoiceItemID,
                    //InvoiceID: invoiceID,
                    ItemID: itemid,
                    Quantity: quantity,
                    //Created: Created,
                    //Modified: Modified,
                    //Remarks:Remarks,
                    PricePerUnit: priceAmount
                });
                invoiceID++;
                var markup = "<tr><td><input type='checkbox' name='record' id='" + itemid + "'></td><td>" + itemname + "</td><td>" + quantity + "</td><td>" + priceAmount + "</td><td>" + (priceAmount * quantity) + "</td></tr>";
                $("table .list").prepend(markup);
                itemWiseEachStepAddTotalAmount += (priceAmount * quantity);
                $('#tdItemTotal').html(itemWiseEachStepAddTotalAmount);
                FinalCalculation();
            }
        });


        $(".delete-row").click(function () {
            debugger;
            $("table tbody").find('input[name="record"]').each(function () {
                if ($(this).is(":checked")) {
                    debugger;
                    var checkId = this.id;
                    $(this).parents("tr").remove();
                    debugger;
                    //$.grep(productList, function (e) {
                    //    debugger;
                    //     e.ItemID == checkId;
                    //});
                    debugger;
                    $.each(productList, function (key, value) {
                        debugger;
                        var checkitemid = value.ItemID;
                        var deductquantity = value.Quantity;
                        var deductpriceperunit = value.PricePerUnit;
                        if (checkId == checkitemid) {
                            //productList.pop(key);

                            productList.splice(key, 1);
                            itemWiseEachStepAddTotalAmount = itemWiseEachStepAddTotalAmount - (deductquantity * deductpriceperunit);
                            $('#tdItemTotal').html(itemWiseEachStepAddTotalAmount);
                            FinalCalculation();
                            return false;
                        }

                    });
                }
            });

        });
    });
    function GetItemPrice(ddlitemid) {
        debugger;
        $.ajax({
            type: 'POST',
            dataType: "json",
            data: "{ ItemID:'" + ddlitemid + "'}",
            contentType: "application/json;charset=utf-8",
            url: "/INV_Invoice/DropDownItemPrice",
            success: (function (result) {
                debugger;
                $('#txtItemPrice').val(result);

            }),
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    function AddNewInvoiceWithItem() {
        debugger;
        var newData = {
            //InvoiceID: InvoiceID,
            CompanyID: $('#CompanyID').val(),
            PartyID: $('#PartyID').val(),
            //UserID: $('#ddlupdateInstituteType').val(),
            Amount: $('#Amount').val(),
            AmountReceived: $('#AmountReceived').val(),
            StatusID: $('#StatusID').val(),
            //Created: Created,
            //Modified: Modified,
            Remarks: $('#Remarks').val(),
            InvoiceDate: $('#InvoiceDate').val(),
            InvoiceNo: $('#InvoiceNo').val(),
            PONo: $('#PONo').val(),
            AmountPending: $('#AmountPending').val(),
            FinYearID: $('#FinYearID').val(),
            CGST: $('#CGST').val(),
            CGSTAmount: $('#tdCGST').html(),
            SGST: $('#SGST').val(),
            SGSTAmount: $('#tdSGST').html(),
            IGST: $('#IGST').val(),
            IGSTAmount: $('#tdIGST').html(),
            IsLocal: $('#IsLocal').val(),
            IsActive: $('#IsActive').val(),
            Casar: $('#Casar').val(),
            TotalAmount: $('#tdFinalTotal').html(),
            INV_InvoiceItems: productList
        };
        debugger;
        console.log(newData);

        $.ajax({
            url: "/INV_Invoice/AddInvoice",
            data: JSON.stringify(newData),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                debugger;


                $('#InvoiceMessage').modal('show');
            },
            error: function (errormessage) {
                debugger;

            }
        });
    }
    function FinalCalculation() {
        var igstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * 5 / 100);
        $('#tdIGST').html(igstCalculation);
        var cgstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * 5 / 100);
        $('#tdCGST').html(cgstCalculation);
        var sgstCalculation = parseFloat(itemWiseEachStepAddTotalAmount * 5 / 100);
        $('#tdSGST').html(sgstCalculation);
        var finaltotal = itemWiseEachStepAddTotalAmount + parseFloat($('#tdIGST').html()) + parseFloat($('#tdCGST').html()) + parseFloat($('#tdSGST').html());
        $('#tdFinalTotal').html(finaltotal);

        var newAmountPending =finaltotal - $('#AmountReceived').val() - $('#Casar').val();
        $('#AmountPending').val(newAmountPending);
    }

</script>


<!-- Modal -->
<div class="modal fade" id="InvoiceMessage" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Succesfully</h4>
            </div>
            <div class="modal-body">
                <p>Succesfully submitted invoice data.</p>
            </div>
            <div class="modal-footer">
                <button id="btnModalOK" type="button" class="btn btn-default">Close</button>
                @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>

    </div>
</div>